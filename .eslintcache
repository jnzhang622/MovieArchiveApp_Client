[{"/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/index.js":"1","/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/reportWebVitals.js":"2","/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/App.js":"3","/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/Components/NomineesContainer.js":"4","/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/Components/MovieContainer.js":"5","/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/Components/MovieCard.js":"6","/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/Components/NomineeCards.js":"7","/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/Components/NavBar.js":"8"},{"size":517,"mtime":1610480863894,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1610480863897,"results":"11","hashOfConfig":"10"},{"size":3632,"mtime":1612890471690,"results":"12","hashOfConfig":"10"},{"size":582,"mtime":1610495272920,"results":"13","hashOfConfig":"10"},{"size":502,"mtime":1610495271177,"results":"14","hashOfConfig":"10"},{"size":1394,"mtime":1611286999654,"results":"15","hashOfConfig":"10"},{"size":1157,"mtime":1611720324921,"results":"16","hashOfConfig":"10"},{"size":461,"mtime":1612890502499,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1pp4nzy",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/index.js",[],["38","39"],"/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/reportWebVitals.js",[],"/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/App.js",["40","41"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport NavBar from \"./Components/NavBar\";\r\nimport MovieContainer from \"./Components/MovieContainer\";\r\nimport NomineesContainer from \"./Components/NomineesContainer\";\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  state={\r\n    nominees: [],\r\n    apiKey: `${process.env.REACT_APP_API_KEY}`,\r\n    searchTerm: \"\",\r\n    currentSearch: \"\",\r\n    searchCategory: \"\",\r\n    page: 1,\r\n    searchResults: []\r\n  }\r\n\r\n  componentDidMount(){ //fetches from rails backend\r\n    fetch(\"http://localhost:3000/nominees\")\r\n        .then(resp => resp.json())\r\n        .then(data => this.setState({nominees: data}))\r\n  }\r\n  \r\n  searchIMDB = (e) => { //uses inputed search term to search omdb\r\n    e.preventDefault()\r\n    fetch(`http://www.omdbapi.com/?apikey=${this.state.apiKey}${this.state.searchCategory}&s=${this.state.searchTerm}&page=${this.state.page}`)\r\n        .then(resp => resp.json())\r\n        .then(data => this.setState({ \r\n          searchResults: data,\r\n          currentSearch: this.state.searchTerm\r\n      }))\r\n  }\r\n\r\n  handleChange = (e) => { //handles the text change in the searchbox\r\n    this.setState({searchTerm: e.target.value})}\r\n  \r\n  handleNewNominee = (newNominee) => { //adds new nominee to nominees state without reloading\r\n    this.setState({nominees: [...this.state.nominees, newNominee]})\r\n  }\r\n\r\n  handleNomineeUpdate = (e) => { //removes nominee from nominees state without reloading\r\n    // console.log(e)\r\n    let updatedNominees = this.state.nominees.filter((nominee) => {\r\n      if (nominee.id === e){\r\n        return false\r\n      } \r\n      return true\r\n    })\r\n    this.setState({nominees: updatedNominees})\r\n  }\r\n\r\n  changeSearchCategory = (e) => { //change filter\r\n    this.setState({searchCategory: e.target.value})\r\n  }\r\n\r\n  render(){\r\n    console.log(this.state.searchCategory)\r\n    return (\r\n      <Router>\r\n        <div className=\"defaultCenter\">\r\n          <NavBar/>\r\n          <div className=\"imdbFormDiv\">\r\n              <form onSubmit={this.searchIMDB} className=\"imdbForm\">\r\n                <input className=\"imdbFormInput\"\r\n                  placeholder=\"Search...\" \r\n                  onChange={this.handleChange}\r\n                  />\r\n              </form>\r\n            <div className=\"filterDiv\">\r\n              <h4>Filter:</h4>\r\n              <select className=\"filterDropdown\" onChange={this.changeSearchCategory}>\r\n                <option value={\"\"}>None</option>\r\n                <option value={\"&type=movie\"}>Movie</option>\r\n                <option value={\"&type=series\"}>Series</option>\r\n                <option value={\"&type=episode\"}>Episode</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"mainCont\">\r\n            <div className=\"searchSubCont\">\r\n              {\r\n                this.state.searchResults.Search ? \r\n                  <div >\r\n                    <h3>Results for {this.state.currentSearch}...</h3>\r\n                    <MovieContainer movies={this.state.searchResults} \r\n                      handleNewNominee={this.handleNewNominee}/>\r\n                  </div>\r\n                : <div>Please use the searchbar to search</div>\r\n              }\r\n            </div>\r\n            <div className=\"nomineeCont\">\r\n              <h3>Nominees</h3>\r\n              <NomineesContainer \r\n                nominees={this.state.nominees} \r\n                handleNomineeUpdate={this.handleNomineeUpdate}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/Components/NomineesContainer.js",[],"/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/Components/MovieContainer.js",[],"/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/Components/MovieCard.js",[],["42","43"],"/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/Components/NomineeCards.js",["44"],"import React from 'react';\r\nimport noImage from './w13911i0.jpg'\r\n\r\nclass NomineeCards extends React.Component{\r\n\r\n  handleDelete = () => { //deletes nominee from the backend\r\n    fetch(`http://localhost:3000/nominees/${this.props.movie.id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\"\r\n        },\r\n    })\r\n        .then(res => res.json())\r\n        .then(() => this.props.handleNomineeUpdate(this.props.movie.id))\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <a>{this.props.movie.Title} ({this.props.movie.Year})</a>\r\n        <div className=\"nomineeCard\">\r\n            <a href={`https://www.imdb.com/title/${this.props.movie.imdbID}`}>\r\n              <img src={(this.props.movie.Poster !== \"N/A\") ?\r\n              this.props.movie.Poster : noImage} \r\n                width='80px'\r\n                alt={this.props.movie.Title}/>\r\n            </a>\r\n            <button className=\"removeNomineeButton\" onClick={this.handleDelete}>\r\n              Remove from Nominees</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NomineeCards;","/mnt/k/Coding/MovieArchiveApp/MovieArchiveApp_Client/src/Components/NavBar.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":35,"nodeType":"51","messageId":"52","endLine":2,"endColumn":40},{"ruleId":"49","severity":1,"message":"53","line":2,"column":42,"nodeType":"51","messageId":"52","endLine":2,"endColumn":48},{"ruleId":"45","replacedBy":"54"},{"ruleId":"47","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":21,"column":9,"nodeType":"58","endLine":21,"endColumn":12},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.",["59"],["60"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]